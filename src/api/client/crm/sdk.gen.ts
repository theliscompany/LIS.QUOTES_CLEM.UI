// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { GetContactGetContactsData, GetContactGetContactsError, GetContactGetContactsResponse, PostContactCreateContactData, PostContactCreateContactError, PostContactCreateContactResponse, GetContactGetContactByIdByIdData, GetContactGetContactByIdByIdError, GetContactGetContactByIdByIdResponse, PutContactUpdateContactByIdData, PutContactUpdateContactByIdError, PutContactUpdateContactByIdResponse, DeleteContactDeleteContactByIdData, DeleteContactDeleteContactByIdError, DeleteContactDeleteContactByIdResponse } from './types.gen';

export const client = createClient(createConfig());

export const getContactGetContacts = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetContactGetContactsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetContactGetContactsResponse, GetContactGetContactsError, ThrowOnError>({
        ...options,
        url: '/Contact/GetContacts'
    });
};

export const postContactCreateContact = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostContactCreateContactData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostContactCreateContactResponse, PostContactCreateContactError, ThrowOnError>({
        ...options,
        url: '/Contact/CreateContact'
    });
};

export const getContactGetContactByIdById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetContactGetContactByIdByIdData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetContactGetContactByIdByIdResponse, GetContactGetContactByIdByIdError, ThrowOnError>({
        ...options,
        url: '/Contact/GetContactById/{id}'
    });
};

export const putContactUpdateContactById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutContactUpdateContactByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutContactUpdateContactByIdResponse, PutContactUpdateContactByIdError, ThrowOnError>({
        ...options,
        url: '/Contact/UpdateContact/{id}'
    });
};

export const deleteContactDeleteContactById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteContactDeleteContactByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteContactDeleteContactByIdResponse, DeleteContactDeleteContactByIdError, ThrowOnError>({
        ...options,
        url: '/Contact/DeleteContact/{id}'
    });
};