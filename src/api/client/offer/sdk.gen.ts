// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser } from '@hey-api/client-axios';
import type { GetApiPackageData, GetApiPackageError, GetApiPackageResponse, PostApiPackageData, PostApiPackageError, PostApiPackageResponse, GetPackageData, GetPackageError, GetPackageResponse, PutApiPackageByIdData, PutApiPackageByIdError, PutApiPackageByIdResponse, DeleteApiPackageByIdData, DeleteApiPackageByIdError, DeleteApiPackageByIdResponse, GetApiQuoteOfferData, GetApiQuoteOfferError, GetApiQuoteOfferResponse, PostApiQuoteOfferData, PostApiQuoteOfferError, PostApiQuoteOfferResponse, GetQuoteOfferData, GetQuoteOfferError, GetQuoteOfferResponse, PutApiQuoteOfferByIdData, PutApiQuoteOfferByIdError, PutApiQuoteOfferByIdResponse, DeleteApiQuoteOfferByIdData, DeleteApiQuoteOfferByIdError, DeleteApiQuoteOfferByIdResponse, PutApiQuoteOfferByIdStatusData, PutApiQuoteOfferByIdStatusError, PutApiQuoteOfferByIdStatusResponse, PutApiQuoteOfferByIdApprovalData, PutApiQuoteOfferByIdApprovalError, PutApiQuoteOfferByIdApprovalResponse, GetApiServiceData, GetApiServiceError, GetApiServiceResponse, PostApiServiceData, PostApiServiceError, PostApiServiceResponse, GetServiceData, GetServiceError, GetServiceResponse, PutApiServiceByIdData, PutApiServiceByIdError, PutApiServiceByIdResponse, DeleteApiServiceByIdData, DeleteApiServiceByIdError, DeleteApiServiceByIdResponse } from './types.gen';

export const client = createClient(createConfig());

export const getApiPackage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiPackageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiPackageResponse, GetApiPackageError, ThrowOnError>({
        ...options,
        url: '/api/Package'
    });
};

export const postApiPackage = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiPackageData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiPackageResponse, PostApiPackageError, ThrowOnError>({
        ...options,
        url: '/api/Package'
    });
};

export const getPackage = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetPackageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetPackageResponse, GetPackageError, ThrowOnError>({
        ...options,
        url: '/api/Package/{id}'
    });
};

export const putApiPackageById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiPackageByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiPackageByIdResponse, PutApiPackageByIdError, ThrowOnError>({
        ...options,
        url: '/api/Package/{id}'
    });
};

export const deleteApiPackageById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiPackageByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiPackageByIdResponse, DeleteApiPackageByIdError, ThrowOnError>({
        ...options,
        url: '/api/Package/{id}'
    });
};

export const getApiQuoteOffer = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiQuoteOfferData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiQuoteOfferResponse, GetApiQuoteOfferError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer'
    });
};

export const postApiQuoteOffer = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiQuoteOfferData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiQuoteOfferResponse, PostApiQuoteOfferError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer'
    });
};

export const getQuoteOffer = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetQuoteOfferData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetQuoteOfferResponse, GetQuoteOfferError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer/{id}'
    });
};

export const putApiQuoteOfferById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiQuoteOfferByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiQuoteOfferByIdResponse, PutApiQuoteOfferByIdError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer/{id}'
    });
};

export const deleteApiQuoteOfferById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiQuoteOfferByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiQuoteOfferByIdResponse, DeleteApiQuoteOfferByIdError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer/{id}'
    });
};

export const putApiQuoteOfferByIdStatus = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiQuoteOfferByIdStatusData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiQuoteOfferByIdStatusResponse, PutApiQuoteOfferByIdStatusError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer/{id}/status'
    });
};

export const putApiQuoteOfferByIdApproval = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiQuoteOfferByIdApprovalData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiQuoteOfferByIdApprovalResponse, PutApiQuoteOfferByIdApprovalError, ThrowOnError>({
        ...options,
        url: '/api/QuoteOffer/{id}/approval'
    });
};

export const getApiService = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<GetApiServiceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetApiServiceResponse, GetApiServiceError, ThrowOnError>({
        ...options,
        url: '/api/Service'
    });
};

export const postApiService = <ThrowOnError extends boolean = false>(options?: OptionsLegacyParser<PostApiServiceData, ThrowOnError>) => {
    return (options?.client ?? client).post<PostApiServiceResponse, PostApiServiceError, ThrowOnError>({
        ...options,
        url: '/api/Service'
    });
};

export const getService = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<GetServiceData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetServiceResponse, GetServiceError, ThrowOnError>({
        ...options,
        url: '/api/Service/{id}'
    });
};

export const putApiServiceById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<PutApiServiceByIdData, ThrowOnError>) => {
    return (options?.client ?? client).put<PutApiServiceByIdResponse, PutApiServiceByIdError, ThrowOnError>({
        ...options,
        url: '/api/Service/{id}'
    });
};

export const deleteApiServiceById = <ThrowOnError extends boolean = false>(options: OptionsLegacyParser<DeleteApiServiceByIdData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteApiServiceByIdResponse, DeleteApiServiceByIdError, ThrowOnError>({
        ...options,
        url: '/api/Service/{id}'
    });
};